(function() {var implementors = {};
implementors["alloc_data"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/prelude/struct.Labels.html\" title=\"struct alloc_data::prelude::Labels\">Labels</a>","synthetic":true,"types":["alloc_data::mem::labels::mem::Labels"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/prelude/struct.Trace.html\" title=\"struct alloc_data::prelude::Trace\">Trace</a>","synthetic":true,"types":["alloc_data::mem::trace::mem::Trace"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/labels/struct.AsRead.html\" title=\"struct alloc_data::mem::labels::AsRead\">AsRead</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::labels::mem::AsRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/labels/struct.AsWrite.html\" title=\"struct alloc_data::mem::labels::AsWrite\">AsWrite</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::labels::mem::AsWrite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/mem/str/struct.Str.html\" title=\"struct alloc_data::mem::str::Str\">Str</a>","synthetic":true,"types":["alloc_data::mem::str::Str"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/str/struct.AsRead.html\" title=\"struct alloc_data::mem::str::AsRead\">AsRead</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::str::AsRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/str/struct.AsWrite.html\" title=\"struct alloc_data::mem::str::AsWrite\">AsWrite</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::str::AsWrite"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/trace/struct.AsRead.html\" title=\"struct alloc_data::mem::trace::AsRead\">AsRead</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::trace::mem::AsRead"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/trace/struct.AsWrite.html\" title=\"struct alloc_data::mem::trace::AsWrite\">AsWrite</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::trace::mem::AsWrite"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/struct.Factory.html\" title=\"struct alloc_data::mem::Factory\">Factory</a>&lt;'a&gt;","synthetic":true,"types":["alloc_data::mem::Factory"]},{"text":"impl&lt;Elm:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc_data/mem/struct.Memory.html\" title=\"struct alloc_data::mem::Memory\">Memory</a>&lt;Elm&gt;","synthetic":true,"types":["alloc_data::mem::Memory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.Loc.html\" title=\"struct alloc_data::Loc\">Loc</a>","synthetic":true,"types":["alloc_data::Loc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.CLoc.html\" title=\"struct alloc_data::CLoc\">CLoc</a>","synthetic":true,"types":["alloc_data::CLoc"]},{"text":"impl Freeze for <a class=\"enum\" href=\"alloc_data/enum.AllocKind.html\" title=\"enum alloc_data::AllocKind\">AllocKind</a>","synthetic":true,"types":["alloc_data::AllocKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.Builder.html\" title=\"struct alloc_data::Builder\">Builder</a>","synthetic":true,"types":["alloc_data::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.Alloc.html\" title=\"struct alloc_data::Alloc\">Alloc</a>","synthetic":true,"types":["alloc_data::Alloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.Diff.html\" title=\"struct alloc_data::Diff\">Diff</a>","synthetic":true,"types":["alloc_data::Diff"]},{"text":"impl Freeze for <a class=\"struct\" href=\"alloc_data/struct.Init.html\" title=\"struct alloc_data::Init\">Init</a>","synthetic":true,"types":["alloc_data::Init"]}];
implementors["base"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/duration/struct.Nanos.html\" title=\"struct base::time::duration::Nanos\">Nanos</a>","synthetic":true,"types":["base::time::duration::Nanos"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/duration/struct.Micros.html\" title=\"struct base::time::duration::Micros\">Micros</a>","synthetic":true,"types":["base::time::duration::Micros"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/duration/struct.Millis.html\" title=\"struct base::time::duration::Millis\">Millis</a>","synthetic":true,"types":["base::time::duration::Millis"]},{"text":"impl&lt;'a, T, Precision&gt; Freeze for <a class=\"struct\" href=\"base/time/duration/struct.DurationDisplay.html\" title=\"struct base::time::duration::DurationDisplay\">DurationDisplay</a>&lt;'a, T, Precision&gt;","synthetic":true,"types":["base::time::duration::DurationDisplay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/struct.Lifetime.html\" title=\"struct base::time::Lifetime\">Lifetime</a>","synthetic":true,"types":["base::time::lifetime::Lifetime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/struct.SinceStart.html\" title=\"struct base::time::SinceStart\">SinceStart</a>","synthetic":true,"types":["base::time::since_start::SinceStart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time/struct.Date.html\" title=\"struct base::time::Date\">Date</a>","synthetic":true,"types":["base::time::Date"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time_stats/struct.RealStopwatch.html\" title=\"struct base::time_stats::RealStopwatch\">RealStopwatch</a>","synthetic":true,"types":["base::time_stats::RealStopwatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/time_stats/struct.FakeStopwatch.html\" title=\"struct base::time_stats::FakeStopwatch\">FakeStopwatch</a>","synthetic":true,"types":["base::time_stats::FakeStopwatch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/uid/struct.Alloc.html\" title=\"struct base::uid::Alloc\">Alloc</a>","synthetic":true,"types":["base::uid::alloc_uid::Alloc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"base/uid/struct.AllocMap.html\" title=\"struct base::uid::AllocMap\">AllocMap</a>&lt;T&gt;","synthetic":true,"types":["base::uid::alloc_uid::AllocMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/uid/struct.Chart.html\" title=\"struct base::uid::Chart\">Chart</a>","synthetic":true,"types":["base::uid::chart_uid::Chart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/uid/struct.Filter.html\" title=\"struct base::uid::Filter\">Filter</a>","synthetic":true,"types":["base::uid::filter_uid::Filter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/uid/struct.SubFilter.html\" title=\"struct base::uid::SubFilter\">SubFilter</a>","synthetic":true,"types":["base::uid::sub_filter_uid::SubFilter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base/uid/enum.Line.html\" title=\"enum base::uid::Line\">Line</a>","synthetic":true,"types":["base::uid::Line"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base/prelude/enum.Inhabited.html\" title=\"enum base::prelude::Inhabited\">Inhabited</a>","synthetic":true,"types":["base::prelude::Inhabited"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/err/struct.Error.html\" title=\"struct base::err::Error\">Error</a>","synthetic":true,"types":["base::err::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base/err/enum.ErrorKind.html\" title=\"enum base::err::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["base::err::ErrorKind"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"base/err/struct.ErrorCxt.html\" title=\"struct base::err::ErrorCxt\">ErrorCxt</a>","synthetic":true,"types":["base::err::ErrorCxt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"base/struct.SampleRate.html\" title=\"struct base::SampleRate\">SampleRate</a>","synthetic":true,"types":["base::SampleRate"]},{"text":"impl Freeze for <a class=\"enum\" href=\"base/enum.RangeCmp.html\" title=\"enum base::RangeCmp\">RangeCmp</a>","synthetic":true,"types":["base::RangeCmp"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"base/struct.Range.html\" title=\"struct base::Range\">Range</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["base::Range"]}];
implementors["charts"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"charts/prelude/struct.LoadInfo.html\" title=\"struct charts::prelude::LoadInfo\">LoadInfo</a>","synthetic":true,"types":["charts::prelude::LoadInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/prelude/struct.AllocStats.html\" title=\"struct charts::prelude::AllocStats\">AllocStats</a>","synthetic":true,"types":["charts::prelude::AllocStats"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/spec/struct.ChartSpec.html\" title=\"struct charts::chart::spec::ChartSpec\">ChartSpec</a>","synthetic":true,"types":["charts::chart::spec::ChartSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/chart/axis/enum.XAxis.html\" title=\"enum charts::chart::axis::XAxis\">XAxis</a>","synthetic":true,"types":["charts::chart::axis::XAxis"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/axis/struct.XAxisIter.html\" title=\"struct charts::chart::axis::XAxisIter\">XAxisIter</a>","synthetic":true,"types":["charts::chart::axis::XAxisIter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/chart/axis/enum.YAxis.html\" title=\"enum charts::chart::axis::YAxis\">YAxis</a>","synthetic":true,"types":["charts::chart::axis::YAxis"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/chart/settings/enum.DisplayMode.html\" title=\"enum charts::chart::settings::DisplayMode\">DisplayMode</a>","synthetic":true,"types":["charts::chart::settings::DisplayMode"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/settings/struct.Resolution.html\" title=\"struct charts::chart::settings::Resolution\">Resolution</a>","synthetic":true,"types":["charts::chart::settings::Resolution"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/settings/struct.Chart.html\" title=\"struct charts::chart::settings::Chart\">Chart</a>","synthetic":true,"types":["charts::chart::settings::Chart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/settings/struct.Charts.html\" title=\"struct charts::chart::settings::Charts\">Charts</a>","synthetic":true,"types":["charts::chart::settings::Charts"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/time/size/struct.TimeSize.html\" title=\"struct charts::chart::time::size::TimeSize\">TimeSize</a>","synthetic":true,"types":["charts::chart::time::size::TimeSize"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/chart/time/enum.TimeChart.html\" title=\"enum charts::chart::time::TimeChart\">TimeChart</a>","synthetic":true,"types":["charts::chart::time::TimeChart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/chart/enum.RawChart.html\" title=\"enum charts::chart::RawChart\">RawChart</a>","synthetic":true,"types":["charts::chart::RawChart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/chart/struct.Chart.html\" title=\"struct charts::chart::Chart\">Chart</a>","synthetic":true,"types":["charts::chart::Chart"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/color/struct.Color.html\" title=\"struct charts::color::Color\">Color</a>","synthetic":true,"types":["charts::color::Color"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/data/struct.Watcher.html\" title=\"struct charts::data::Watcher\">Watcher</a>","synthetic":true,"types":["charts::data::watcher::Watcher"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"charts/data/struct.FullFactory.html\" title=\"struct charts::data::FullFactory\">FullFactory</a>&lt;'a&gt;","synthetic":true,"types":["charts::data::FullFactory"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/data/struct.Data.html\" title=\"struct charts::data::Data\">Data</a>","synthetic":true,"types":["charts::data::Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/label/enum.LabelSpec.html\" title=\"enum charts::filter::label::LabelSpec\">LabelSpec</a>","synthetic":true,"types":["charts::filter::label::LabelSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/loc/enum.LineSpec.html\" title=\"enum charts::filter::loc::LineSpec\">LineSpec</a>","synthetic":true,"types":["charts::filter::loc::LineSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/loc/enum.LocSpec.html\" title=\"enum charts::filter::loc::LocSpec\">LocSpec</a>","synthetic":true,"types":["charts::filter::loc::LocSpec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/ord/enum.Pred.html\" title=\"enum charts::filter::ord::Pred\">Pred</a>","synthetic":true,"types":["charts::filter::ord::Pred"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/ord/enum.Cmp.html\" title=\"enum charts::filter::ord::Cmp\">Cmp</a>","synthetic":true,"types":["charts::filter::ord::Cmp"]},{"text":"impl&lt;Num&gt; Freeze for <a class=\"enum\" href=\"charts/filter/ord/enum.OrdFilter.html\" title=\"enum charts::filter::ord::OrdFilter\">OrdFilter</a>&lt;Num&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Num: Freeze,&nbsp;</span>","synthetic":true,"types":["charts::filter::ord::OrdFilter"]},{"text":"impl&lt;Val&gt; Freeze for <a class=\"enum\" href=\"charts/filter/ord/enum.Update.html\" title=\"enum charts::filter::ord::Update\">Update</a>&lt;Val&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Val: Freeze,&nbsp;</span>","synthetic":true,"types":["charts::filter::ord::Update"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/struct.FilterSpec.html\" title=\"struct charts::filter::FilterSpec\">FilterSpec</a>","synthetic":true,"types":["charts::filter::spec::FilterSpec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/stats/struct.FilterStats.html\" title=\"struct charts::filter::stats::FilterStats\">FilterStats</a>","synthetic":true,"types":["charts::filter::stats::FilterStats"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/stats/struct.AllFilterStats.html\" title=\"struct charts::filter::stats::AllFilterStats\">AllFilterStats</a>","synthetic":true,"types":["charts::filter::stats::AllFilterStats"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/string_like/enum.Pred.html\" title=\"enum charts::filter::string_like::Pred\">Pred</a>","synthetic":true,"types":["charts::filter::string_like::Pred"]},{"text":"impl&lt;Spec&gt; Freeze for <a class=\"struct\" href=\"charts/filter/string_like/struct.StringLikeFilter.html\" title=\"struct charts::filter::string_like::StringLikeFilter\">StringLikeFilter</a>&lt;Spec&gt;","synthetic":true,"types":["charts::filter::string_like::StringLikeFilter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/string_like/enum.Update.html\" title=\"enum charts::filter::string_like::Update\">Update</a>","synthetic":true,"types":["charts::filter::string_like::Update"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/sub/enum.RawSubFilter.html\" title=\"enum charts::filter::sub::RawSubFilter\">RawSubFilter</a>","synthetic":true,"types":["charts::filter::sub::RawSubFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/sub/struct.SubFilter.html\" title=\"struct charts::filter::sub::SubFilter\">SubFilter</a>","synthetic":true,"types":["charts::filter::sub::SubFilter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/sub/enum.Update.html\" title=\"enum charts::filter::sub::Update\">Update</a>","synthetic":true,"types":["charts::filter::sub::Update"]},{"text":"impl&lt;'input&gt; Freeze for <a class=\"struct\" href=\"charts/filter/gen/parser/struct.Parser.html\" title=\"struct charts::filter::gen::parser::Parser\">Parser</a>&lt;'input&gt;","synthetic":true,"types":["charts::filter::gen::parser::Parser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/gen/alloc_site/struct.AllocSiteParams.html\" title=\"struct charts::filter::gen::alloc_site::AllocSiteParams\">AllocSiteParams</a>","synthetic":true,"types":["charts::filter::gen::alloc_site::AllocSiteParams"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/gen/alloc_site/struct.AllocSiteWork.html\" title=\"struct charts::filter::gen::alloc_site::AllocSiteWork\">AllocSiteWork</a>","synthetic":true,"types":["charts::filter::gen::alloc_site::AllocSiteWork"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/gen/alloc_site/struct.AllocSite.html\" title=\"struct charts::filter::gen::alloc_site::AllocSite\">AllocSite</a>","synthetic":true,"types":["charts::filter::gen::alloc_site::AllocSite"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/gen/chart_gen/struct.ChartDesc.html\" title=\"struct charts::filter::gen::chart_gen::ChartDesc\">ChartDesc</a>","synthetic":true,"types":["charts::filter::gen::chart_gen::ChartDesc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/gen/inactive/struct.Inactive.html\" title=\"struct charts::filter::gen::inactive::Inactive\">Inactive</a>","synthetic":true,"types":["charts::filter::gen::inactive::Inactive"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/gen/enum.FilterGen.html\" title=\"enum charts::filter::gen::FilterGen\">FilterGen</a>","synthetic":true,"types":["charts::filter::gen::FilterGen"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/enum.CmpKind.html\" title=\"enum charts::filter::CmpKind\">CmpKind</a>","synthetic":true,"types":["charts::filter::CmpKind"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/filter/enum.FilterKind.html\" title=\"enum charts::filter::FilterKind\">FilterKind</a>","synthetic":true,"types":["charts::filter::FilterKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/struct.Filters.html\" title=\"struct charts::filter::Filters\">Filters</a>","synthetic":true,"types":["charts::filter::Filters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/filter/struct.Filter.html\" title=\"struct charts::filter::Filter\">Filter</a>","synthetic":true,"types":["charts::filter::Filter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_server/enum.Msg.html\" title=\"enum charts::msg::to_server::Msg\">Msg</a>","synthetic":true,"types":["charts::msg::to_server::Msg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_server/enum.ChartsMsg.html\" title=\"enum charts::msg::to_server::ChartsMsg\">ChartsMsg</a>","synthetic":true,"types":["charts::msg::to_server::ChartsMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_server/enum.ChartMsg.html\" title=\"enum charts::msg::to_server::ChartMsg\">ChartMsg</a>","synthetic":true,"types":["charts::msg::to_server::ChartMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_server/enum.FiltersMsg.html\" title=\"enum charts::msg::to_server::FiltersMsg\">FiltersMsg</a>","synthetic":true,"types":["charts::msg::to_server::FiltersMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_client/enum.Msg.html\" title=\"enum charts::msg::to_client::Msg\">Msg</a>","synthetic":true,"types":["charts::msg::to_client::Msg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_client/enum.ChartsMsg.html\" title=\"enum charts::msg::to_client::ChartsMsg\">ChartsMsg</a>","synthetic":true,"types":["charts::msg::to_client::ChartsMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_client/enum.ChartMsg.html\" title=\"enum charts::msg::to_client::ChartMsg\">ChartMsg</a>","synthetic":true,"types":["charts::msg::to_client::ChartMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_client/enum.FiltersMsg.html\" title=\"enum charts::msg::to_client::FiltersMsg\">FiltersMsg</a>","synthetic":true,"types":["charts::msg::to_client::FiltersMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/to_client/enum.RawMsg.html\" title=\"enum charts::msg::to_client::RawMsg\">RawMsg</a>","synthetic":true,"types":["charts::msg::to_client::RawMsg"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/msg/enum.ChartSettingsMsg.html\" title=\"enum charts::msg::ChartSettingsMsg\">ChartSettingsMsg</a>","synthetic":true,"types":["charts::msg::ChartSettingsMsg"]},{"text":"impl&lt;Val&gt; Freeze for <a class=\"struct\" href=\"charts/point/struct.PointVal.html\" title=\"struct charts::point::PointVal\">PointVal</a>&lt;Val&gt;","synthetic":true,"types":["charts::point::PointVal"]},{"text":"impl&lt;Key, Val&gt; Freeze for <a class=\"struct\" href=\"charts/point/struct.Point.html\" title=\"struct charts::point::Point\">Point</a>&lt;Key, Val&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Key: Freeze,&nbsp;</span>","synthetic":true,"types":["charts::point::Point"]},{"text":"impl&lt;X, Y&gt; Freeze for <a class=\"struct\" href=\"charts/point/struct.Ranges.html\" title=\"struct charts::point::Ranges\">Ranges</a>&lt;X, Y&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Y: Freeze,&nbsp;</span>","synthetic":true,"types":["charts::point::Ranges"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/point/struct.Size.html\" title=\"struct charts::point::Size\">Size</a>","synthetic":true,"types":["charts::point::Size"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/point/enum.TimePoints.html\" title=\"enum charts::point::TimePoints\">TimePoints</a>","synthetic":true,"types":["charts::point::TimePoints"]},{"text":"impl Freeze for <a class=\"enum\" href=\"charts/point/enum.Points.html\" title=\"enum charts::point::Points\">Points</a>","synthetic":true,"types":["charts::point::Points"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/point/struct.ChartPoints.html\" title=\"struct charts::point::ChartPoints\">ChartPoints</a>","synthetic":true,"types":["charts::point::ChartPoints"]},{"text":"impl Freeze for <a class=\"struct\" href=\"charts/struct.Charts.html\" title=\"struct charts::Charts\">Charts</a>","synthetic":true,"types":["charts::Charts"]}];
implementors["ctf"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/header/struct.Header.html\" title=\"struct ctf::ast::header::Header\">Header</a>","synthetic":true,"types":["ctf::ast::header::Header"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/header/struct.Ctf.html\" title=\"struct ctf::ast::header::Ctf\">Ctf</a>","synthetic":true,"types":["ctf::ast::header::Ctf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/header/struct.Packet.html\" title=\"struct ctf::ast::header::Packet\">Packet</a>","synthetic":true,"types":["ctf::ast::header::Packet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/header/struct.Event.html\" title=\"struct ctf::ast::header::Event\">Event</a>","synthetic":true,"types":["ctf::ast::header::Event"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ctf/ast/event/enum.Kind.html\" title=\"enum ctf::ast::event::Kind\">Kind</a>","synthetic":true,"types":["ctf::ast::event::Kind"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"enum\" href=\"ctf/ast/event/enum.Event.html\" title=\"enum ctf::ast::event::Event\">Event</a>&lt;'data&gt;","synthetic":true,"types":["ctf::ast::event::Event"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/ast/event/struct.Info.html\" title=\"struct ctf::ast::event::Info\">Info</a>&lt;'data&gt;","synthetic":true,"types":["ctf::ast::event::Info"]},{"text":"impl Freeze for <a class=\"enum\" href=\"ctf/ast/event/enum.AllocSource.html\" title=\"enum ctf::ast::event::AllocSource\">AllocSource</a>","synthetic":true,"types":["ctf::ast::event::AllocSource"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/event/struct.Alloc.html\" title=\"struct ctf::ast::event::Alloc\">Alloc</a>","synthetic":true,"types":["ctf::ast::event::Alloc"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/event/struct.Promotion.html\" title=\"struct ctf::ast::event::Promotion\">Promotion</a>","synthetic":true,"types":["ctf::ast::event::Promotion"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/event/struct.Collection.html\" title=\"struct ctf::ast::event::Collection\">Collection</a>","synthetic":true,"types":["ctf::ast::event::Collection"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/ast/struct.Locs.html\" title=\"struct ctf::ast::Locs\">Locs</a>&lt;'data&gt;","synthetic":true,"types":["ctf::ast::Locs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/ast/struct.CacheCheck.html\" title=\"struct ctf::ast::CacheCheck\">CacheCheck</a>","synthetic":true,"types":["ctf::ast::CacheCheck"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/btrace/struct.Cxt.html\" title=\"struct ctf::btrace::Cxt\">Cxt</a>","synthetic":true,"types":["ctf::btrace::Cxt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/loc/struct.Idx.html\" title=\"struct ctf::loc::Idx\">Idx</a>","synthetic":true,"types":["ctf::loc::Idx"]},{"text":"impl&lt;'data, T&gt; Freeze for <a class=\"struct\" href=\"ctf/loc/struct.MtfMap.html\" title=\"struct ctf::loc::MtfMap\">MtfMap</a>&lt;'data, T&gt;","synthetic":true,"types":["ctf::loc::MtfMap"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/loc/struct.Cxt.html\" title=\"struct ctf::loc::Cxt\">Cxt</a>&lt;'data&gt;","synthetic":true,"types":["ctf::loc::Cxt"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/loc/struct.Location.html\" title=\"struct ctf::loc::Location\">Location</a>&lt;'data&gt;","synthetic":true,"types":["ctf::loc::Location"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/parse/struct.Pos.html\" title=\"struct ctf::parse::Pos\">Pos</a>","synthetic":true,"types":["ctf::parse::Pos"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/parse/struct.Cxt.html\" title=\"struct ctf::parse::Cxt\">Cxt</a>&lt;'data&gt;","synthetic":true,"types":["ctf::parse::Cxt"]},{"text":"impl&lt;'data&gt; Freeze for <a class=\"struct\" href=\"ctf/parse/struct.RawParser.html\" title=\"struct ctf::parse::RawParser\">RawParser</a>&lt;'data&gt;","synthetic":true,"types":["ctf::parse::RawParser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/parse/struct.BigEndian.html\" title=\"struct ctf::parse::BigEndian\">BigEndian</a>","synthetic":true,"types":["ctf::parse::BigEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"ctf/parse/struct.LowEndian.html\" title=\"struct ctf::parse::LowEndian\">LowEndian</a>","synthetic":true,"types":["ctf::parse::LowEndian"]},{"text":"impl&lt;'data, Endian&gt; Freeze for <a class=\"struct\" href=\"ctf/parse/struct.Parser.html\" title=\"struct ctf::parse::Parser\">Parser</a>&lt;'data, Endian&gt;","synthetic":true,"types":["ctf::parse::Parser"]},{"text":"impl&lt;'data, Endian&gt; Freeze for <a class=\"struct\" href=\"ctf/parse/struct.CtfParser.html\" title=\"struct ctf::parse::CtfParser\">CtfParser</a>&lt;'data, Endian&gt;","synthetic":true,"types":["ctf::parse::CtfParser"]},{"text":"impl&lt;'cxt, 'data, Endian&gt; Freeze for <a class=\"struct\" href=\"ctf/parse/struct.PacketParser.html\" title=\"struct ctf::parse::PacketParser\">PacketParser</a>&lt;'cxt, 'data, Endian&gt;","synthetic":true,"types":["ctf::parse::PacketParser"]}];
implementors["manage"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"manage/struct.Error.html\" title=\"struct manage::Error\">Error</a>","synthetic":true,"types":["manage::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"manage/enum.ErrorKind.html\" title=\"enum manage::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["manage::ErrorKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"manage/enum.HasLicense.html\" title=\"enum manage::HasLicense\">HasLicense</a>","synthetic":true,"types":["manage::HasLicense"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"manage/struct.Rewriter.html\" title=\"struct manage::Rewriter\">Rewriter</a>","synthetic":true,"types":["manage::Rewriter"]}];
implementors["memthol"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"memthol/prelude/struct.FromClient.html\" title=\"struct memthol::prelude::FromClient\">FromClient</a>","synthetic":true,"types":["memthol::prelude::FromClient"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"memthol/socket/struct.Com.html\" title=\"struct memthol::socket::Com\">Com</a>","synthetic":true,"types":["memthol::socket::Com"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"memthol/socket/struct.Handler.html\" title=\"struct memthol::socket::Handler\">Handler</a>","synthetic":true,"types":["memthol::socket::Handler"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"memthol/struct.ErrorHandler.html\" title=\"struct memthol::ErrorHandler\">ErrorHandler</a>","synthetic":true,"types":["memthol::ErrorHandler"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()