window.SIDEBAR_ITEMS = {"enum":[["Either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases."],["RangeCmp","Result of comparing a range to a value."]],"externcrate":[["bincode",""],["chrono",""],["conv",""],["log",""],["peg",""],["rand",""]],"fn":[["convert","Used to convert between integer representations."],["destroy","Destroys what it’s given."],["identity","Returns what it’s given."]],"macro":[["cfg_item","`cfg`-level if-then-else for items."],["client_wasm_build_dir","Directory in which the WASM client is being built (not release version)."],["client_wasm_build_dir_for","Directory in which the WASM client is being built."],["debug_do","Ignores the input tokens in `release`."],["implement","Convenience macro for implementing basic traits."],["new_time_stats","Creates a stopwatch aggregation."],["prelude","Imports this crate’s prelude."],["time","Counts the time it takes to evaluate an expression."],["unwrap_or","Fails if a result expression is an error, after printing the error."]],"mod":[["client","Contains compilation directives for the WASM client."],["err","Errors for memthol, handled by `error_chain`."],["error_chain","Re-exports from `error_chain`."],["prelude","Common imports."],["time","Structures representing time in different ways."],["time_stats","Stopwatch, for time statistics."],["uid","UID types for charts, filters and subfilters."]],"struct":[["Range","A range, inclusive on both ends."],["SampleRate","Represents a sample rate."]],"type":[["SVec16","Alias type for `SmallVec` of max stack-size 16."],["SVec32","Alias type for `SmallVec` of max stack-size 32."],["SVec64","Alias type for `SmallVec` of max stack-size 64."],["SVec8","Alias type for `SmallVec` of max stack-size 8."]]};